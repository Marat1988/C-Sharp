<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ButtonAddEditDeleteThemes.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsQAAA7EAZUrDhsAAARpSURBVFhHtZZZTxtXGIaR+g96UynXVSAhQBzibcb2jE3u
        olaqUNpEVMrWJUACxthgs8PYhhDoz+iv6FUv6E2FEN7G4IXFkD+B9PX95syYsdUk4uIc6RW+OOh5v3VO
        z02O5+mft17lD1Zfbh0Yz6Gx/IHxDHoCjWb3DW3qr59x7StxW8J5ld9f/XHdJH2mIBQvkGYrAoXThStc
        +1rclnA48ijA3vFDS74J/LblmyxQMFUgXPtG3JZwOO3RmSL5xjvBvrdF8kPBuaJcA2MwoMNAN9j/jlWi
        4HxJrgFuOI0z4MBtsH9KSElLNvATG0g4UQPqwKfLFIiXScmU5RoYtQx0gaFgvELBmQqpmYpcAz9kD4wI
        GwCcwRw1g4MJlknqginXwHdsYFbAnagt+KxJymyV1CXJBh5nD2HAjtqCMxhKVklJVSm0XL25AV6vL7Dh
        2usV4m7nhuOac9o5coZ/v3P0dyTZGTWD1TnA548oYjTIl9nbVbJlQ8maRshRXvyNsPBbh/zJf8TadtYr
        bzheMjznPGrc7dxwXHNOO0fOcMWB21Grc0eAH2MN1yiyAC3WSVuCluukrzQoylptUszSCY2sQesnpOea
        Ym2/zO9juYj16qxWnvP2qNkN11FvB46oQ2nAMzUKQaqjhTqpiw0KLbGaFF5pkgZwFOCYAQPGKen5pijX
        c5eBjg3nhjsNZ8ODkC9RpeF4lTzQEHR/5ogezB7TcLJGD+dq5J2voxwN8i80KLDYpACMBJdPLKkrEIxY
        BsbYAL5k7ejdG841agE03PBUhQYmy9Q/XqZ7kxUafGdacE/Chqfc4GuowsDVU1LXWGcUWj8jJXsqDDzj
        7zgMfCr1bGBookR9vxap7/cS3f0/ePJYRJ2ui4gdsAUVwPDGOZoUygqp+TNh4InbQBfcA3Dv6wLd/qVA
        fb8V6e4bAR9g+HQn3MdwpDq4xBELcHjjzIJq2RZp+RbpmxeWolsXFN46FwZGN/41+DHhjt4L3Xl9SN++
        OKTbMNCL6O+8KVH/RJkG3po0CLhTcwFHyhnO9UXUVsQMzgGaF8DY+0uKbX+kkQ9C2vaFMBDDMyqcKV4p
        +JQqaaR8HlFOF6kfuhcv0UCiTIMYv6GUSZ7FGg1OmXQ/bsO55k7kDM+dk4LUqpvnFNpqUXi7RZEPF6Tt
        XJK+e0nR3Y8U/UNIMarHMGC9nvgNxz94g31WQ6m9XSf1TsNxzTntHLndWL3d//cJMfNm78cHa2XjOvWi
        27nhuOacdjVnd7aswwY8CXvc3KnnhkPNQ5t2Z8s6D2Gg3XhO9Eg9dzs3XLuzZR02wJtO1P46eh41Hq/I
        +5ZcAz4Y8Nrp5/Vq1d6OnkdNQ9fjmkwDpuFtp190Ptdex5LhOdcwcrgm14AP3W+NXlf6R7BkdNkGAht4
        SLjqz6MXwZqNsgFsN31HsgGFDdjjx184NsB7nuv/CAai2Hi4Js+AN7E35l9rXPnXkQF8z5UcvnQYPV65
        OuDu9SrrfGlt33C99vT8BwbjpQM1ETtKAAAAAElFTkSuQmCC
</value>
  </data>
</root>